import pygame
import random

# Screen dimensions
WIDTH = 800
HEIGHT = 600

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
GREEN = (0, 255, 0)

# Paddle dimensions
PADDLE_WIDTH = 100
PADDLE_HEIGHT = 10

# Ball dimensions
BALL_RADIUS = 10

# Brick dimensions
BRICK_WIDTH = 70
BRICK_HEIGHT = 20

# Number of rows and columns of bricks
ROWS = 5
COLS = 10

#Initialize game objects
pygame.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Breakout Game")

# Paddle
paddle = pygame.Rect(WIDTH // 2 - PADDLE_WIDTH // 2, HEIGHT - 20, PADDLE_WIDTH, PADDLE_HEIGHT)

# Ball
ball = pygame.Rect(WIDTH // 2 - BALL_RADIUS, HEIGHT // 2 - BALL_RADIUS, BALL_RADIUS * 2, BALL_RADIUS * 2)
ball_dx, Â  
 ball_dy = 5, -5

# Bricks
bricks = []
for row in range(ROWS):
    for col in range(COLS):
        brick = pygame.Rect(col * BRICK_WIDTH + 10, row * BRICK_HEIGHT + 10, BRICK_WIDTH, BRICK_HEIGHT)
        bricks.append(brick)
		
#Game Loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Move paddle
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and paddle.left > 0:
        paddle.move_ip(-5, 0)
    if keys[pygame.K_RIGHT] and paddle.right < WIDTH:
        paddle.move_ip(5, 0)

    # Move ball
    ball.move_ip(ball_dx, ball_dy)

    # Check ball collisions
    if ball.top <= 0:
        ball_dy = -ball_dy
    if ball.bottom >= HEIGHT:
        running = False
    if ball.left <= 0 or ball.right >= WIDTH:
        ball_dx = -ball_dx

    # Check ball collision with paddle
    if ball.colliderect(paddle):
        ball_dy = -ball_dy

    # Check ball collision with bricks
    for brick in bricks[:]:
        if ball.colliderect(brick):
            ball_dy = -ball_dy
            bricks.remove(brick)

    # Fill screen
    screen.fill(BLACK)

    # Draw objects
    pygame.draw.rect(screen, WHITE, paddle)
    pygame.draw.circle(screen, WHITE, ball.center, BALL_RADIUS)
    for brick in bricks:
        pygame.draw.rect(screen, RED, brick)

    # Update display
    pygame.display.flip()

# Quit game
pygame.quit()
